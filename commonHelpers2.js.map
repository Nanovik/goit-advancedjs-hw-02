{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet intervalId = null;\n\nconst btnStart = document.querySelector('button[data-start]');\nbtnStart.disabled = true;\n\nconst input = document.getElementById('#datetime-picker');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < options.defaultDate) {\n        iziToast.show({\n        message: 'Please choose a date in the future',\n        color: 'red',\n        position: 'topCenter',\n      });\n    } else {\n      btnStart.disabled = false;\n    }\n  },\n};\n\nconst vFlatpickr = flatpickr(input, options);\n\nconst timer = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nbtnStart.addEventListener('click', onBtnStartClick);\n\nfunction onBtnStartClick() {\n  updateTime();\n  intervalId = setInterval(updateTime, 1000);\n  btnStart.disabled = true;\n}\n\nfunction updateTime() {\n  const currentDate = Date.now();\n  const selectedDate = vFlatpickr.selectedDates[0].getTime();\n  let differences = selectedDate - currentDate;\n\n  if (differences > 0) {\n    const timerTime = convertMs(differences);\n\n    timer.days.textContent = addLeadingZero(timerTime.days);\n    timer.hours.textContent = addLeadingZero(timerTime.hours);\n    timer.minutes.textContent = addLeadingZero(timerTime.minutes);\n    timer.seconds.textContent = addLeadingZero(timerTime.seconds);\n  } else {\n    clearInterval(intervalId);\n  }\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}"],"names":["intervalId","btnStart","input","options","selectedDates","iziToast","vFlatpickr","flatpickr","timer","onBtnStartClick","updateTime","currentDate","differences","timerTime","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"+IAKA,IAAIA,EAAa,KAEjB,MAAMC,EAAW,SAAS,cAAc,oBAAoB,EAC5DA,EAAS,SAAW,GAEpB,MAAMC,EAAQ,SAAS,eAAe,kBAAkB,EAElDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,GAAKD,EAAQ,YAC3BE,EAAS,KAAK,CACd,QAAS,qCACT,MAAO,MACP,SAAU,WAClB,CAAO,EAEDJ,EAAS,SAAW,EAEvB,CACH,EAEMK,EAAaC,EAAUL,EAAOC,CAAO,EAErCK,EAAQ,CACZ,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEAP,EAAS,iBAAiB,QAASQ,CAAe,EAElD,SAASA,GAAkB,CACzBC,IACAV,EAAa,YAAYU,EAAY,GAAI,EACzCT,EAAS,SAAW,EACtB,CAEA,SAASS,GAAa,CACpB,MAAMC,EAAc,KAAK,MAEzB,IAAIC,EADiBN,EAAW,cAAc,GAAG,QAAO,EACvBK,EAEjC,GAAIC,EAAc,EAAG,CACnB,MAAMC,EAAYC,EAAUF,CAAW,EAEvCJ,EAAM,KAAK,YAAcO,EAAeF,EAAU,IAAI,EACtDL,EAAM,MAAM,YAAcO,EAAeF,EAAU,KAAK,EACxDL,EAAM,QAAQ,YAAcO,EAAeF,EAAU,OAAO,EAC5DL,EAAM,QAAQ,YAAcO,EAAeF,EAAU,OAAO,CAChE,MACI,cAAcb,CAAU,CAE5B,CAEA,SAASc,EAAUE,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC"}